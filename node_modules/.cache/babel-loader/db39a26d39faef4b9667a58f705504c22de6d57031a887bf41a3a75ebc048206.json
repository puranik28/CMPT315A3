{"ast":null,"code":"var _jsxFileName = \"/home/puranik/CMPT315A3/emailclientapplication/src/SidebarView/SidebarView.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar/SearchBar.component';\nimport EmailList from './emaillist/emaillist.component'; // Adjust the path based on your project structure\nimport Email from './Email/Email.component'; // Adjust the path based on your project structure\nimport './SidebarView.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarView = ({\n  emails,\n  activeEmailId,\n  onEmailClick\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Filter emails based on search term\n  const filteredEmails = emails.filter(email => email.from.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Email Sidebar View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      placeholder: \"Search Bar\",\n      handleInput: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-list\",\n      children: filteredEmails.map(email => /*#__PURE__*/_jsxDEV(Email, {\n        id: email.id,\n        from: email.from,\n        address: email.address,\n        time: email.time,\n        message: email.message,\n        subject: email.subject,\n        tag: email.tag,\n        read: email.read,\n        onClick: () => onEmailClick(email.id) // Pass the onClick handler if needed\n      }, email.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(SidebarView, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = SidebarView;\nexport default SidebarView;\nvar _c;\n$RefreshReg$(_c, \"SidebarView\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","EmailList","Email","jsxDEV","_jsxDEV","SidebarView","emails","activeEmailId","onEmailClick","_s","searchTerm","setSearchTerm","filteredEmails","filter","email","from","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","handleInput","e","target","value","map","id","address","time","message","subject","tag","read","onClick","_c","$RefreshReg$"],"sources":["/home/puranik/CMPT315A3/emailclientapplication/src/SidebarView/SidebarView.component.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar/SearchBar.component';\nimport EmailList from './emaillist/emaillist.component'; // Adjust the path based on your project structure\nimport Email from './Email/Email.component'; // Adjust the path based on your project structure\nimport './SidebarView.styles.css';\n\nconst SidebarView = ({ emails, activeEmailId, onEmailClick }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Filter emails based on search term\n  const filteredEmails = emails.filter((email) =>\n    email.from.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"sidebar-container\">\n      <h1 className=\"heading\">Email Sidebar View</h1>\n      <SearchBar placeholder=\"Search Bar\" handleInput={(e) => setSearchTerm(e.target.value)} />\n      \n      {/* Render the EmailList component and map through the filtered emails */}\n      <div className=\"email-list\">\n        {filteredEmails.map((email) => (\n          <Email\n            key={email.id}\n            id={email.id}\n            from={email.from}\n            address={email.address}\n            time={email.time}\n            message={email.message}\n            subject={email.subject}\n            tag={email.tag}\n            read={email.read}\n            onClick={() => onEmailClick(email.id)} // Pass the onClick handler if needed\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarView;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,SAAS,MAAM,iCAAiC,CAAC,CAAC;AACzD,OAAOC,KAAK,MAAM,yBAAyB,CAAC,CAAC;AAC7C,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,aAAa;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMc,cAAc,GAAGN,MAAM,CAACO,MAAM,CAAEC,KAAK,IACzCA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,UAAU,CAACM,WAAW,CAAC,CAAC,CAC5D,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCf,OAAA;MAAIc,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CnB,OAAA,CAACJ,SAAS;MAACwB,WAAW,EAAC,YAAY;MAACC,WAAW,EAAGC,CAAC,IAAKf,aAAa,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGzFnB,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBP,cAAc,CAACiB,GAAG,CAAEf,KAAK,iBACxBV,OAAA,CAACF,KAAK;QAEJ4B,EAAE,EAAEhB,KAAK,CAACgB,EAAG;QACbf,IAAI,EAAED,KAAK,CAACC,IAAK;QACjBgB,OAAO,EAAEjB,KAAK,CAACiB,OAAQ;QACvBC,IAAI,EAAElB,KAAK,CAACkB,IAAK;QACjBC,OAAO,EAAEnB,KAAK,CAACmB,OAAQ;QACvBC,OAAO,EAAEpB,KAAK,CAACoB,OAAQ;QACvBC,GAAG,EAAErB,KAAK,CAACqB,GAAI;QACfC,IAAI,EAAEtB,KAAK,CAACsB,IAAK;QACjBC,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAACM,KAAK,CAACgB,EAAE,CAAE,CAAC;MAAA,GATlChB,KAAK,CAACgB,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAhCIJ,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}